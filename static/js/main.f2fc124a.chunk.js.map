{"version":3,"sources":["types/SelectedName.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectedName","TodoList","todo","showTodos","selectedId","isTodoSelected","id","className","map","list","classNames","completed","title","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","onSubmit","e","preventDefault","value","onChange","target","All","Active","Completed","event","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeTodosUser","useState","user","setUser","handleUser","a","userId","userFetch","useEffect","href","email","name","App","todos","setTodos","setSelectedId","visibleTodos","prepareTodos","filter","item","toLowerCase","includes","trim","filterTodos","handleTodos","showTodoUser","useCallback","closeTodoUser","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2fc124a.chunk.js","sourcesContent":["export enum SelectedName {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo[]\n  showTodos: (todo: Todo) => void\n  selectedId: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({ todo, showTodos, selectedId }) => {\n  const isTodoSelected = (id: number) => selectedId?.id === id;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todo.map(list => (\n          <tr\n            data-cy=\"todo\"\n            key={list.id}\n            className={classNames('',\n              { 'has-background-info-light': isTodoSelected(list.id) })}\n          >\n            <td className=\"is-vcentered\">{list.id}</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className={classNames('fas',\n                  { 'fa-check': list.completed })}\n                />\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              {\n                !list.completed\n                  ? (\n                    <p className=\"has-text-danger\">{list.title}</p>\n                  )\n                  : (\n                    <p className=\"has-text-success\">{list.title}</p>\n                  )\n              }\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {\n                isTodoSelected(list.id)\n                  ? (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    </button>\n                  )\n                  : (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => showTodos(list)}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  )\n              }\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\n/* <tbody>\n  <tr data-cy=\"todo\" className=\"\">\n    <td className=\"is-vcentered\">1</td>\n    <td className=\"is-vcentered\" />\n    <td className=\"is-vcentered is-expanded\">\n      <p className=\"has-text-danger\">delectus aut autem</p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n        <span className=\"icon\">\n          <i className=\"far fa-eye\" />\n        </span>\n      </button>\n    </td>\n  </tr>\n  <tr data-cy=\"todo\" className=\"has-background-info-light\">\n    <td className=\"is-vcentered\">2</td>\n    <td className=\"is-vcentered\" />\n    <td className=\"is-vcentered is-expanded\">\n      <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n        <span className=\"icon\">\n          <i className=\"far fa-eye-slash\" />\n        </span>\n      </button>\n    </td>\n  </tr>\n\n  <tr data-cy=\"todo\" className=\"\">\n    <td className=\"is-vcentered\">1</td>\n    <td className=\"is-vcentered\" />\n    <td className=\"is-vcentered is-expanded\">\n      <p className=\"has-text-danger\">delectus aut autem</p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n        <span className=\"icon\">\n          <i className=\"far fa-eye\" />\n        </span>\n      </button>\n    </td>\n  </tr>\n\n  <tr data-cy=\"todo\" className=\"\">\n    <td className=\"is-vcentered\">6</td>\n    <td className=\"is-vcentered\" />\n    <td className=\"is-vcentered is-expanded\">\n      <p className=\"has-text-danger\">\n        qui ullam ratione quibusdam voluptatem quia omnis\n      </p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n        <span className=\"icon\">\n          <i className=\"far fa-eye\" />\n        </span>\n      </button>\n    </td>\n  </tr>\n\n  <tr data-cy=\"todo\" className=\"\">\n    <td className=\"is-vcentered\">8</td>\n    <td className=\"is-vcentered\">\n      <span className=\"icon\" data-cy=\"iconCompleted\">\n        <i className=\"fas fa-check\" />\n      </span>\n    </td>\n    <td className=\"is-vcentered is-expanded\">\n      <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n        <span className=\"icon\">\n          <i className=\"far fa-eye\" />\n        </span>\n      </button>\n    </td>\n  </tr>\n</tbody> */\n","import React from 'react';\nimport { SelectedName } from '../../types/SelectedName';\n\ntype Props = {\n  setFilterBy: (filterBy: SelectedName) => void\n  filterBy: SelectedName\n  query: string,\n  setQuery: (query: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\" onSubmit={e => e.preventDefault()}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filterBy}\n            onChange={({ target }) => setFilterBy(target.value as SelectedName)}\n            data-cy=\"statusSelect\"\n          >\n            <option value={SelectedName.All}>{SelectedName.All}</option>\n            <option value={SelectedName.Active}>{SelectedName.Active}</option>\n            <option value={SelectedName.Completed}>\n              {SelectedName.Completed}\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              value={query}\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedId: Todo | null\n  closeTodosUser: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedId, closeTodosUser }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleUser = async () => {\n    const userFetch = await getUser(selectedId?.userId || 0);\n\n    setUser(userFetch);\n  };\n\n  useEffect(() => {\n    handleUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedId?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodosUser}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedId?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                !selectedId?.completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>\n              }\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n/* <div className=\"modal-card\">\n  <header className=\"modal-card-head\">\n    <div\n      className=\"modal-card-title has-text-weight-medium\"\n      data-cy=\"modal-header\"\n    >\n      Todo #2\n    </div>\n\n    eslint-disable-next-line jsx-a11y/control-has-associated-label\n    <button\n      type=\"button\"\n      className=\"delete\"\n      data-cy=\"modal-close\"\n    />\n  </header>\n\n  <div className=\"modal-card-body\">\n    <p className=\"block\" data-cy=\"modal-title\">\n      quis ut nam facilis et officia qui\n    </p>\n\n    <p className=\"block\" data-cy=\"modal-user\">\n      <strong className=\"has-text-success\">Done</strong>\n      <strong className=\"has-text-danger\">Planned</strong>\n\n      by\n\n      <a href=\"mailto:Sincere@april.biz\">\n        Leanne Graham\n      </a>\n    </p>\n  </div>\n</div>\n */\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { SelectedName } from './types/SelectedName';\n\nconst filterTodos = (todos: Todo[], query: string, filterBy: SelectedName) => {\n  let prepareTodos = [...todos];\n\n  if (query) {\n    prepareTodos = prepareTodos.filter(item => item.title.toLowerCase()\n      .includes(query.trim().toLowerCase()));\n  }\n\n  switch (filterBy) {\n    case SelectedName.Active:\n      prepareTodos = prepareTodos.filter(item => !item.completed);\n      break;\n\n    case SelectedName.Completed:\n      prepareTodos = prepareTodos.filter(item => item.completed);\n      break;\n\n    case SelectedName.All:\n    default:\n      break;\n  }\n\n  return prepareTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedId, setSelectedId] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<SelectedName>(SelectedName.All);\n  const [query, setQuery] = useState('');\n\n  const visibleTodos = filterTodos(todos, query, filterBy);\n\n  const handleTodos = async () => {\n    const todo = await getTodos();\n\n    setTodos(todo);\n  };\n\n  useEffect(() => {\n    handleTodos();\n  }, []);\n\n  const showTodoUser = useCallback((todo: Todo) => {\n    setSelectedId(todo);\n  }, [selectedId]);\n\n  const closeTodoUser = useCallback(() => {\n    setSelectedId(null);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                visibleTodos.length > 0\n                  ? (\n                    <TodoList\n                      todo={visibleTodos}\n                      showTodos={showTodoUser}\n                      selectedId={selectedId}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedId && (\n        <TodoModal selectedId={selectedId} closeTodosUser={closeTodoUser} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}